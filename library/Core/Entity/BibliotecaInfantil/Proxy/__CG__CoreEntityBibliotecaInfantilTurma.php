<?php

namespace Core\Entity\BibliotecaInfantil\Proxy\__CG__\Core\Entity\BibliotecaInfantil;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Turma extends \Core\Entity\BibliotecaInfantil\Turma implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getIdTurma()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["idTurma"];
        }
        $this->__load();
        return parent::getIdTurma();
    }

    public function setDtInicio($dtInicio)
    {
        $this->__load();
        return parent::setDtInicio($dtInicio);
    }

    public function getDtInicio()
    {
        $this->__load();
        return parent::getDtInicio();
    }

    public function setDtFim($dtFim)
    {
        $this->__load();
        return parent::setDtFim($dtFim);
    }

    public function getDtFim()
    {
        $this->__load();
        return parent::getDtFim();
    }

    public function setNuIdadeMinima($nuIdadeMinima)
    {
        $this->__load();
        return parent::setNuIdadeMinima($nuIdadeMinima);
    }

    public function getNuIdadeMinima()
    {
        $this->__load();
        return parent::getNuIdadeMinima();
    }

    public function setNuIdadeMaxima($nuIdadeMaxima)
    {
        $this->__load();
        return parent::setNuIdadeMaxima($nuIdadeMaxima);
    }

    public function getNuIdadeMaxima()
    {
        $this->__load();
        return parent::getNuIdadeMaxima();
    }

    public function setNuAno($nuAno)
    {
        $this->__load();
        return parent::setNuAno($nuAno);
    }

    public function getNuAno()
    {
        $this->__load();
        return parent::getNuAno();
    }

    public function setStAtivo($stAtivo)
    {
        $this->__load();
        return parent::setStAtivo($stAtivo);
    }

    public function getStAtivo()
    {
        $this->__load();
        return parent::getStAtivo();
    }

    public function setNoObs($noObs)
    {
        $this->__load();
        return parent::setNoObs($noObs);
    }

    public function getNoObs()
    {
        $this->__load();
        return parent::getNoObs();
    }

    public function setIdCiclo(\Core\Entity\BibliotecaInfantil\Ciclo $idCiclo = NULL)
    {
        $this->__load();
        return parent::setIdCiclo($idCiclo);
    }

    public function getIdCiclo()
    {
        $this->__load();
        return parent::getIdCiclo();
    }

    public function setIdUsuario(\Core\Entity\BibliotecaInfantil\Usuario $idUsuario = NULL)
    {
        $this->__load();
        return parent::setIdUsuario($idUsuario);
    }

    public function getIdUsuario()
    {
        $this->__load();
        return parent::getIdUsuario();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'idTurma', 'dtInicio', 'dtFim', 'nuIdadeMinima', 'nuIdadeMaxima', 'nuAno', 'stAtivo', 'noObs', 'idCiclo', 'idUsuario');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}